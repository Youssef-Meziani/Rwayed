# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    uploads_base_url: '%env(UPLOADS_BASE_URL)%'
    admin_email_address: '%env(ADMIN_EMAIL_ADDRESS)%'
services:
    _defaults:
        bind:
            $csrfTokenManager: '@security.csrf.token_manager'
            $apiPlatformClient: '@my.api.platform.client'
            $adminEmail: '%env(ADMIN_EMAIL_ADDRESS)%'
            $uploadsBaseUrl: '%env(UPLOADS_BASE_URL)%'
            $caracteristiqueStrategy: '@App\Strategy\CaracteristiqueStrategyInterface'
            $photoStrategy: '@App\Strategy\PhotoStrategyInterface'
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # Définition des stratégies comme services
    # Alias pour CaracteristiqueTransformationStrategy
    App\Strategy\CaracteristiqueStrategyInterface: '@App\Strategy\CaracteristiqueTransformationStrategy'
    
    # Alias pour PhotoTransformationStrategy
    App\Strategy\PhotoStrategyInterface: '@App\Strategy\PhotoTransformationStrategy'
    
    # Définition de PneuTransformationStrategy avec injection des stratégies spécifiques
    App\Strategy\PneuTransformationStrategy:
        arguments:
            $caracteristiqueStrategy: '@App\Strategy\CaracteristiqueStrategyInterface'
            $photoStrategy: '@App\Strategy\PhotoStrategyInterface'
    # Configuration HttpClient pour consommer l'API Platform
    my.api.platform.client:
        class: Symfony\Contracts\HttpClient\HttpClientInterface
        factory: [ 'Symfony\Component\HttpClient\HttpClient', 'create' ]
        arguments:
            $defaultOptions:
                base_uri: '%env(API_BASE_URL)%'

    App\EventSubscriber\AuthenticationEventSubscriber:
        arguments:
            $authenticationUtils: '@security.authentication_utils'
            $twig: '@twig'
        tags:
            - { name: 'kernel.event_subscriber' }
    # default configuration for services in *this* file
    App\Services\PasswordHasherService:
        arguments:
            $passwordHasher: '@Symfony\Component\PasswordHasher\Hasher\UserPasswordHasherInterface'

    # Enregistrement manuel de l'extension Twig comme service
    App\Twig\AppExtension:
        tags:
            - { name: twig.extension }
    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'


    # the last definitions always *replace* previous ones