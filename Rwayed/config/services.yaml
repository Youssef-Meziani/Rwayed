# parameters.yaml
# Paramètres généraux de l'application qui ne changent pas selon l'environnement de déploiement.
parameters:
    uploads_base_url: '%env(UPLOADS_BASE_URL)%'
    admin_email_address: '%env(ADMIN_EMAIL_ADDRESS)%'

# services.yaml
# Configuration des services de l'application.
services:
    # Enregistrement automatique des classes dans src/ comme services
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
    _defaults:
        autowire: true      # Injecte automatiquement les dépendances dans vos services.
        autoconfigure: true # Enregistre automatiquement vos services comme commandes, abonnés à des événements, etc.        
        bind:               # Liaisons de paramètres spécifiques pour l'injection de dépendances
            $csrfTokenManager: '@security.csrf.token_manager'
            $apiPlatformClient: '@my.api.platform.client'
            $adminEmail: '%env(ADMIN_EMAIL_ADDRESS)%'
            $uploadsBaseUrl: '%env(UPLOADS_BASE_URL)%'
            $photoStrategy: '@App\Strategy\PhotoStrategyInterface'
            $avisStrategy: '@App\Strategy\AvisStrategyInterface'

    # Services spécifiques
    App\Services\EmailService:
        arguments:
            $adminEmail: '%admin_email_address%'

    App\EventSubscriber\PanierSubscriber:
        arguments:
            $twig: '@twig'
            $panierFactory: '@App\Order\Factory\PanierFactory'
            $orderStorage: '@App\Order\Storage\OrderSessionStorage'

    App\Controller\PanierController:
        arguments:
            $panierFactory: '@App\Order\Factory\PanierFactory'
            $minioExtension: '@App\Twig\MinioExtension'

    App\EventSubscriber\AuthenticationEventSubscriber:
        arguments:
            $authenticationUtils: '@security.authentication_utils'
            $twig: '@twig'
        tags:
            - { name: 'kernel.event_subscriber' }            

    # Stratégies
    App\Strategy\PhotoStrategyInterface: '@App\Strategy\PhotoTransformationStrategy'
    App\Strategy\AvisStrategyInterface: '@App\Strategy\AvisTransformationStrategy'
    App\Strategy\PneuTransformationStrategy:
        arguments:
            $photoStrategy: '@App\Strategy\PhotoStrategyInterface'
            $avisStrategy: '@App\Strategy\AvisStrategyInterface'

    # HttpClient personnalisé pour l'API Platform
    my.api.platform.client:
        class: Symfony\Contracts\HttpClient\HttpClientInterface
        factory: ['Symfony\Component\HttpClient\HttpClient', 'create']
        arguments:
            $defaultOptions:
                base_uri: '%env(API_BASE_URL)%'    

    # Enregistrement manuel de l'extension Twig comme service

    App\Twig\AppExtension:
        tags:
            - { name: twig.extension }
            
    App\Twig\TotalItemsExtension:

    App\Twig\MinioExtension:
        arguments:
            $uploadsBaseUrl: '%uploads_base_url%'
        tags:
            - { name: twig.extension }

